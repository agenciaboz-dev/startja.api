// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model Customer {
  id                        Int                @id @default(autoincrement())
  name                      String
  email                     String             @unique
  password                  String
  register_date             String
  phone                     String
  document                  String             @unique
  city                      String
  state                     String
  district                  String
  number                    Int
  adjunct                   String
  street                    String
  cep                       String
  regimeTributario          Int
  inscricaoEstadual         String
  isento                    Boolean
  businessName              String             @default("")
  discrimina_impostos       Boolean            @default(true)
  enviar_email_destinatario Boolean            @default(true)
  inscricao_municipal       String             @default("")
  habilita_nfe              Boolean            @default(true)
  habilita_nfce             Boolean            @default(true)
  proximo_numero_nfe        Int                @default(1)
  serie_nfe                 Int                @default(1)
  certificateId             Int                @unique
  certificate               DigitalCertificate @relation(name: "CustomerToDigitalCertificate", fields: [certificateId], references: [id])
  companies                 Company[]          @relation(name: "CompanyToCustomer")
  notas                     notaFiscal[]       @relation(name: "CustomerTonotaFiscal")
  properties                Property[]         @relation(name: "CustomerToProperty")
}

model Accounts {
  id        Int     @id @default(autoincrement())
  internal  Boolean @default(false)
  name      String
  agency    String
  accNumber String
  bankName  String
}

model DigitalCertificate {
  id          Int       @id @default(autoincrement())
  expiry      String
  certificate String    @db.Text
  password    String    @default("") @db.Text
  customer    Customer? @relation(name: "CustomerToDigitalCertificate")
}

model Company {
  id                Int          @id @default(autoincrement())
  customerId        Int
  customer          Customer     @relation(name: "CompanyToCustomer", fields: [customerId], references: [id])
  type              String
  name              String
  businessName      String
  document          String       @unique
  inscricaoEstadual String
  indicadorEstadual String
  city              String
  state             String
  district          String
  street            String
  adjunct           String?
  number            String
  cep               String
  email             String
  phone             String
  final_consumer    Boolean      @default(false)
  notas             notaFiscal[] @relation(name: "CompanyTonotaFiscal")
}

model notaFiscal {
  id                 Int                 @id @default(autoincrement())
  emitente_id        Int
  emitente           Customer            @relation(name: "CustomerTonotaFiscal", fields: [emitente_id], references: [id])
  products           ProdutoNotaFiscal[] @relation(name: "ProdutoNotaFiscalTonotaFiscal")
  destinatario_id    Int
  destinatario       Company             @relation(name: "CompanyTonotaFiscal", fields: [destinatario_id], references: [id])
  propriedade_id     Int
  propriedade        Property            @relation(name: "PropertyTonotaFiscal", fields: [propriedade_id], references: [id])
  emissionDatetime   String?             @db.Text
  numero             Int
  serie              Int
  natureza_operacao  String
  tipo_documento     Int
  local_destino      Int
  finalidade_emissao Int
  consumidor_final   Int
  presenca_comprador Int
  valor_frete        Float
  valor_seguro       Float
  valor_produtos     Float
  valor_total        Float
  status             String              @default("")
  mensagem_sefaz     String              @default("")
  chave              String              @default("")
  protocolo          String              @default("")
  url_xml            String              @default("")
  url_pdf            String              @default("")
}

model Property {
  id          Int          @id @default(autoincrement())
  user_id     Int
  user        Customer     @relation(name: "CustomerToProperty", fields: [user_id], references: [id])
  name        String
  ie          String
  nifr        String
  cep         String
  city        String
  state       String
  street      String
  number      String
  adjunct     String
  district    String
  exploration String
  declarant   String
  nfe_series  String
  nfe_number  String
  notas       notaFiscal[] @relation(name: "PropertyTonotaFiscal")
}

model Product {
  id             Int                 @id @default(autoincrement())
  name           String
  ncm            String
  codigo_externo String              @default("")
  icmsOrigin     Int                 @default(0)
  produtosNota   ProdutoNotaFiscal[] @relation(name: "ProductToProdutoNotaFiscal")
  tax_rules      regraTributacao[]   @relation(name: "ProductToregraTributacao")
}

model ProdutoNotaFiscal {
  id           Int        @id @default(autoincrement())
  unidade      String
  unitaryValue Float
  productQnty  Int
  nota         notaFiscal @relation(name: "ProdutoNotaFiscalTonotaFiscal", fields: [notaId], references: [id])
  notaId       Int
  produtoId    Int
  produto      Product    @relation(name: "ProductToProdutoNotaFiscal", fields: [produtoId], references: [id])
}

model Natureza {
  id               Int               @id @default(autoincrement())
  operation        String
  type             Int
  finality         String
  motive           String
  emissionFinality Int
  active           Boolean           @default(true)
  rules            regraTributacao[] @relation(name: "NaturezaToregraTributacao")
}

model regraTributacao {
  id                           Int        @id @default(autoincrement())
  aliquota                     Int
  cfop                         Int
  icms_modalidade_base_calculo Int
  cofins_situacao_tributaria   String
  icms_situacao_tributaria     String
  pis_situacao_tributaria      String
  origem                       String
  destino                      String
  product_id                   Int
  product                      Product    @relation(name: "ProductToregraTributacao", fields: [product_id], references: [id], onDelete: Cascade)
  naturezas                    Natureza[] @relation(name: "NaturezaToregraTributacao")
}
